{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    \"default\": Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","map":{"version":3,"sources":["/Users/Nelson/Desktop/ReactjsTemplates/material-kit-react-master/node_modules/@material-ui/core/esm/internal/SwitchBase.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","React","PropTypes","clsx","refType","useControlled","useFormControl","withStyles","IconButton","styles","root","padding","checked","disabled","input","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","classes","className","defaultChecked","disabledProp","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_useControlled","controlled","Boolean","_useControlled2","setCheckedState","muiFormControl","handleFocus","event","handleBlur","handleInputChange","newChecked","target","hasLabelFor","createElement","component","role","undefined","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","func","oneOfType","number","any"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,IAAIC,MAAM,GAAG;AAClBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADY;AAIlBC,EAAAA,OAAO,EAAE,EAJS;AAKlBC,EAAAA,QAAQ,EAAE,EALQ;AAMlBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,OAAO,EAAE,CAHJ;AAILC,IAAAA,KAAK,EAAE,MAJF;AAKLC,IAAAA,MAAM,EAAE,MALH;AAMLC,IAAAA,GAAG,EAAE,CANA;AAOLC,IAAAA,IAAI,EAAE,CAPD;AAQLC,IAAAA,MAAM,EAAE,CARH;AASLX,IAAAA,OAAO,EAAE,CATJ;AAULY,IAAAA,MAAM,EAAE;AAVH;AANW,CAAb;AAmBP;;;;AAIA,IAAIC,UAAU,GAAGvB,KAAK,CAACwB,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAChE,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AAAA,MACIC,WAAW,GAAGH,KAAK,CAACd,OADxB;AAAA,MAEIkB,WAAW,GAAGJ,KAAK,CAACI,WAFxB;AAAA,MAGIC,OAAO,GAAGL,KAAK,CAACK,OAHpB;AAAA,MAIIC,SAAS,GAAGN,KAAK,CAACM,SAJtB;AAAA,MAKIC,cAAc,GAAGP,KAAK,CAACO,cAL3B;AAAA,MAMIC,YAAY,GAAGR,KAAK,CAACb,QANzB;AAAA,MAOIsB,IAAI,GAAGT,KAAK,CAACS,IAPjB;AAAA,MAQIC,EAAE,GAAGV,KAAK,CAACU,EARf;AAAA,MASIC,UAAU,GAAGX,KAAK,CAACW,UATvB;AAAA,MAUIC,QAAQ,GAAGZ,KAAK,CAACY,QAVrB;AAAA,MAWIC,IAAI,GAAGb,KAAK,CAACa,IAXjB;AAAA,MAYIC,MAAM,GAAGd,KAAK,CAACc,MAZnB;AAAA,MAaIC,QAAQ,GAAGf,KAAK,CAACe,QAbrB;AAAA,MAcIC,OAAO,GAAGhB,KAAK,CAACgB,OAdpB;AAAA,MAeIC,QAAQ,GAAGjB,KAAK,CAACiB,QAfrB;AAAA,MAgBIC,QAAQ,GAAGlB,KAAK,CAACkB,QAhBrB;AAAA,MAiBIC,QAAQ,GAAGnB,KAAK,CAACmB,QAjBrB;AAAA,MAkBIC,IAAI,GAAGpB,KAAK,CAACoB,IAlBjB;AAAA,MAmBIC,KAAK,GAAGrB,KAAK,CAACqB,KAnBlB;AAAA,MAoBIC,KAAK,GAAGhD,wBAAwB,CAAC0B,KAAD,EAAQ,CAAC,WAAD,EAAc,SAAd,EAAyB,aAAzB,EAAwC,SAAxC,EAAmD,WAAnD,EAAgE,gBAAhE,EAAkF,UAAlF,EAA8F,MAA9F,EAAsG,IAAtG,EAA4G,YAA5G,EAA0H,UAA1H,EAAsI,MAAtI,EAA8I,QAA9I,EAAwJ,UAAxJ,EAAoK,SAApK,EAA+K,UAA/K,EAA2L,UAA3L,EAAuM,UAAvM,EAAmN,MAAnN,EAA2N,OAA3N,CAAR,CApBpC;;AAsBA,MAAIuB,cAAc,GAAG5C,aAAa,CAAC;AACjC6C,IAAAA,UAAU,EAAErB,WADqB;AAEjC,eAASsB,OAAO,CAAClB,cAAD,CAFiB;AAGjCM,IAAAA,IAAI,EAAE;AAH2B,GAAD,CAAlC;AAAA,MAKIa,eAAe,GAAGrD,cAAc,CAACkD,cAAD,EAAiB,CAAjB,CALpC;AAAA,MAMIrC,OAAO,GAAGwC,eAAe,CAAC,CAAD,CAN7B;AAAA,MAOIC,eAAe,GAAGD,eAAe,CAAC,CAAD,CAPrC;;AASA,MAAIE,cAAc,GAAGhD,cAAc,EAAnC;;AAEA,MAAIiD,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,QAAId,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACc,KAAD,CAAP;AACD;;AAED,QAAIF,cAAc,IAAIA,cAAc,CAACZ,OAArC,EAA8C;AAC5CY,MAAAA,cAAc,CAACZ,OAAf,CAAuBc,KAAvB;AACD;AACF,GARD;;AAUA,MAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBD,KAApB,EAA2B;AAC1C,QAAIhB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACgB,KAAD,CAAN;AACD;;AAED,QAAIF,cAAc,IAAIA,cAAc,CAACd,MAArC,EAA6C;AAC3Cc,MAAAA,cAAc,CAACd,MAAf,CAAsBgB,KAAtB;AACD;AACF,GARD;;AAUA,MAAIE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BF,KAA3B,EAAkC;AACxD,QAAIG,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAahD,OAA9B;AACAyC,IAAAA,eAAe,CAACM,UAAD,CAAf;;AAEA,QAAIlB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACe,KAAD,EAAQG,UAAR,CAAR;AACD;AACF,GAPD;;AASA,MAAI9C,QAAQ,GAAGqB,YAAf;;AAEA,MAAIoB,cAAJ,EAAoB;AAClB,QAAI,OAAOzC,QAAP,KAAoB,WAAxB,EAAqC;AACnCA,MAAAA,QAAQ,GAAGyC,cAAc,CAACzC,QAA1B;AACD;AACF;;AAED,MAAIgD,WAAW,GAAGf,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,OAAlD;AACA,SAAO7C,KAAK,CAAC6D,aAAN,CAAoBtD,UAApB,EAAgCV,QAAQ,CAAC;AAC9CiE,IAAAA,SAAS,EAAE,MADmC;AAE9C/B,IAAAA,SAAS,EAAE7B,IAAI,CAAC4B,OAAO,CAACrB,IAAT,EAAesB,SAAf,EAA0BpB,OAAO,IAAImB,OAAO,CAACnB,OAA7C,EAAsDC,QAAQ,IAAIkB,OAAO,CAAClB,QAA1E,CAF+B;AAG9CA,IAAAA,QAAQ,EAAEA,QAHoC;AAI9CgC,IAAAA,QAAQ,EAAE,IAJoC;AAK9CmB,IAAAA,IAAI,EAAEC,SALwC;AAM9CvB,IAAAA,OAAO,EAAEa,WANqC;AAO9Cf,IAAAA,MAAM,EAAEiB,UAPsC;AAQ9C9B,IAAAA,GAAG,EAAEA;AARyC,GAAD,EAS5CqB,KAT4C,CAAxC,EASI/C,KAAK,CAAC6D,aAAN,CAAoB,OAApB,EAA6BhE,QAAQ,CAAC;AAC/C8B,IAAAA,SAAS,EAAEA,SADoC;AAE/ChB,IAAAA,OAAO,EAAEiB,WAFsC;AAG/CI,IAAAA,cAAc,EAAEA,cAH+B;AAI/CD,IAAAA,SAAS,EAAED,OAAO,CAACjB,KAJ4B;AAK/CD,IAAAA,QAAQ,EAAEA,QALqC;AAM/CuB,IAAAA,EAAE,EAAEyB,WAAW,IAAIzB,EAN4B;AAO/CG,IAAAA,IAAI,EAAEA,IAPyC;AAQ/CE,IAAAA,QAAQ,EAAEiB,iBARqC;AAS/Cf,IAAAA,QAAQ,EAAEA,QATqC;AAU/ChB,IAAAA,GAAG,EAAEW,QAV0C;AAW/CM,IAAAA,QAAQ,EAAEA,QAXqC;AAY/CC,IAAAA,QAAQ,EAAEA,QAZqC;AAa/CC,IAAAA,IAAI,EAAEA,IAbyC;AAc/CC,IAAAA,KAAK,EAAEA;AAdwC,GAAD,EAe7CV,UAf6C,CAArC,CATJ,EAwBUzB,OAAO,GAAGkB,WAAH,GAAiBK,IAxBlC,CAAP;AAyBD,CAjGgB,CAAjB,C,CAiGI;AACJ;;AAEA+B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC5C,UAAU,CAAC6C,SAAX,GAAuB;AAC7D;;;AAGAzC,EAAAA,SAAS,EAAE1B,SAAS,CAACoE,IAJwC;;AAM7D;;;AAGA1D,EAAAA,OAAO,EAAEV,SAAS,CAACoE,IAT0C;;AAW7D;;;AAGAxC,EAAAA,WAAW,EAAE5B,SAAS,CAACqE,IAAV,CAAeC,UAdiC;;AAgB7D;;;;AAIAzC,EAAAA,OAAO,EAAE7B,SAAS,CAACuE,MAAV,CAAiBD,UApBmC;;AAsB7D;;;AAGAxC,EAAAA,SAAS,EAAE9B,SAAS,CAACwE,MAzBwC;;AA2B7D;;;AAGAzC,EAAAA,cAAc,EAAE/B,SAAS,CAACoE,IA9BmC;;AAgC7D;;;AAGAzD,EAAAA,QAAQ,EAAEX,SAAS,CAACoE,IAnCyC;;AAqC7D;;;AAGAnC,EAAAA,IAAI,EAAEjC,SAAS,CAACqE,IAAV,CAAeC,UAxCwC;;AA0C7D;;;AAGApC,EAAAA,EAAE,EAAElC,SAAS,CAACwE,MA7C+C;;AA+C7D;;;AAGArC,EAAAA,UAAU,EAAEnC,SAAS,CAACuE,MAlDuC;;AAoD7D;;;AAGAnC,EAAAA,QAAQ,EAAElC,OAvDmD;;AAyD7D;;;AAGAmC,EAAAA,IAAI,EAAErC,SAAS,CAACwE,MA5D6C;;AA8D7D;;;AAGAlC,EAAAA,MAAM,EAAEtC,SAAS,CAACyE,IAjE2C;;AAmE7D;;;;;;AAMAlC,EAAAA,QAAQ,EAAEvC,SAAS,CAACyE,IAzEyC;;AA2E7D;;;AAGAjC,EAAAA,OAAO,EAAExC,SAAS,CAACyE,IA9E0C;;AAgF7D;;;;AAIAhC,EAAAA,QAAQ,EAAEzC,SAAS,CAACoE,IApFyC;;AAsF7D;;;AAGA1B,EAAAA,QAAQ,EAAE1C,SAAS,CAACoE,IAzFyC;;AA2F7D;;;AAGAzB,EAAAA,QAAQ,EAAE3C,SAAS,CAAC0E,SAAV,CAAoB,CAAC1E,SAAS,CAAC2E,MAAX,EAAmB3E,SAAS,CAACwE,MAA7B,CAApB,CA9FmD;;AAgG7D;;;AAGA5B,EAAAA,IAAI,EAAE5C,SAAS,CAACwE,MAAV,CAAiBF,UAnGsC;;AAqG7D;;;AAGAzB,EAAAA,KAAK,EAAE7C,SAAS,CAAC4E;AAxG4C,CAA/D,GAyGI,KAAK,CAzGT;AA0GA,eAAevE,UAAU,CAACE,MAAD,EAAS;AAChC8B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZf,UAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);"]},"metadata":{},"sourceType":"module"}